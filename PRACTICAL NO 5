# PRACTICAL NO 5 TOKEN RING MUTUAL EXCLUSION

class TokenRing:
    def __init__(self, num_nodes):
        self.num_nodes = num_nodes
        self.nodes = [None] * num_nodes

    def set_node(self, node_id, data):
        self.nodes[node_id] = data

    def run(self):
        token = self.nodes[0]
        current_node = 0

        print("Starting run loop...")
        print("Initial token:", token)

        while True:
            if token:
                print(f"Node {current_node}: Received token with data '{token}'")
                print(f"Node {current_node}: Processing data '{self.nodes[current_node]}'")

                next_node = (current_node + 1) % self.num_nodes
                token = self.nodes[next_node]
                self.nodes[next_node] = None

                if next_node == 0 and token is None:
                    print("Token has completed a full rotation. Stopping.")
                    break

                current_node = next_node
            else:
                print("No token to process. Exiting.")
                break

# Setup and run
token_ring = TokenRing(4)
token_ring.set_node(0, "Data 1")
token_ring.set_node(1, "Data 2")
token_ring.set_node(2, "Data 3")
token_ring.set_node(3, "Data 4")

token_ring.run()
